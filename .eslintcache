[{"C:\\Users\\Nico\\my-app\\src\\index.js":"1","C:\\Users\\Nico\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\Nico\\my-app\\src\\App.js":"3","C:\\Users\\Nico\\my-app\\src\\components\\card-list\\card-list.component.jsx":"4","C:\\Users\\Nico\\my-app\\src\\components\\card\\card.component.jsx":"5","C:\\Users\\Nico\\my-app\\src\\components\\graph\\graph.component.jsx":"6","C:\\Users\\Nico\\my-app\\src\\components\\graph\\canvasjs.react.js":"7","C:\\Users\\Nico\\my-app\\src\\components\\graph\\canvasjs.min.js":"8","C:\\Users\\Nico\\my-app\\src\\components\\graph\\bar-chart.component.jsx":"9","C:\\Users\\Nico\\my-app\\src\\components\\mapsComponent\\maps.component.jsx":"10","C:\\Users\\Nico\\my-app\\src\\components\\mapChart\\MapChart.jsx":"11","C:\\Users\\Nico\\my-app\\src\\components\\FirstPage\\FirstPage.jsx":"12","C:\\Users\\Nico\\my-app\\src\\components\\NavBar\\NavBar.jsx":"13","C:\\Users\\Nico\\my-app\\src\\components\\Images\\languages.jsx":"14","C:\\Users\\Nico\\my-app\\src\\components\\us\\US-Page.jsx":"15","C:\\Users\\Nico\\my-app\\src\\components\\us\\US-mapChartComponent.js":"16","C:\\Users\\Nico\\my-app\\src\\components\\Europe\\Europe2.jsx":"17","C:\\Users\\Nico\\my-app\\src\\components\\Europe\\europeRegions.jsx":"18","C:\\Users\\Nico\\my-app\\src\\components\\search-box\\search-box.component.jsx":"19","C:\\Users\\Nico\\my-app\\src\\components\\worldMap.component.jsx":"20","C:\\Users\\Nico\\my-app\\src\\components\\WorldLanguages\\World.jsx":"21","C:\\Users\\Nico\\my-app\\src\\components\\WorldLanguages\\percentage.js":"22","C:\\Users\\Nico\\my-app\\src\\components\\WorldLanguages\\islands.js":"23","C:\\Users\\Nico\\my-app\\src\\components\\WorldLanguages\\englishSpeakingCountries.js":"24","C:\\Users\\Nico\\my-app\\src\\components\\WorldLanguages\\engIsles.js":"25"},{"size":500,"mtime":1610244298092,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":342,"mtime":1612711936764,"results":"29","hashOfConfig":"27"},{"size":454,"mtime":1616969904158,"results":"30","hashOfConfig":"27"},{"size":295,"mtime":1610282498307,"results":"31","hashOfConfig":"27"},{"size":2256,"mtime":1610907180780,"results":"32","hashOfConfig":"27"},{"size":1720,"mtime":1610836741996,"results":"33","hashOfConfig":"27"},{"size":459239,"mtime":1610836741956,"results":"34","hashOfConfig":"27"},{"size":1570,"mtime":1610841733425,"results":"35","hashOfConfig":"27"},{"size":1617,"mtime":1612712838659,"results":"36","hashOfConfig":"27"},{"size":9607,"mtime":1613869876762,"results":"37","hashOfConfig":"27"},{"size":3113,"mtime":1625089148102,"results":"38","hashOfConfig":"27"},{"size":4148,"mtime":1625775967715,"results":"39","hashOfConfig":"27"},{"size":647,"mtime":1613753889455,"results":"40","hashOfConfig":"27"},{"size":2061,"mtime":1625151788662,"results":"41","hashOfConfig":"27"},{"size":4158,"mtime":1625098213371,"results":"42","hashOfConfig":"27"},{"size":9111,"mtime":1615137297313,"results":"43","hashOfConfig":"27"},{"size":704,"mtime":1614636128596,"results":"44","hashOfConfig":"27"},{"size":252,"mtime":1616621805669,"results":"45","hashOfConfig":"27"},{"size":2377,"mtime":1625776542223,"results":"46","hashOfConfig":"27"},{"size":8520,"mtime":1625776312237,"results":"47","hashOfConfig":"27"},{"size":2376,"mtime":1625319211753,"results":"48","hashOfConfig":"27"},{"size":1348,"mtime":1625266959261,"results":"49","hashOfConfig":"27"},{"size":1573,"mtime":1625322969175,"results":"50","hashOfConfig":"27"},{"size":256,"mtime":1625323730813,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1kn0ch6",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\Nico\\my-app\\src\\index.js",[],["116","117"],"C:\\Users\\Nico\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Nico\\my-app\\src\\App.js",["118"],"import { Component } from 'react';\nimport './App.css';\nimport FirstPage from \"./components/FirstPage/FirstPage\";\nimport NavBar from \"./components/NavBar/NavBar.jsx\";\n\nclass App extends Component {\n\n  render() {\n    \n    return (\n      <div className='App'>\n\n        <NavBar />\n        \n        \n      </div>\n    );\n  }\n\n}\n\nexport default App;","C:\\Users\\Nico\\my-app\\src\\components\\card-list\\card-list.component.jsx",[],"C:\\Users\\Nico\\my-app\\src\\components\\card\\card.component.jsx",[],"C:\\Users\\Nico\\my-app\\src\\components\\graph\\graph.component.jsx",[],"C:\\Users\\Nico\\my-app\\src\\components\\graph\\canvasjs.react.js",[],"C:\\Users\\Nico\\my-app\\src\\components\\graph\\canvasjs.min.js",[],["119","120"],"C:\\Users\\Nico\\my-app\\src\\components\\graph\\bar-chart.component.jsx",[],"C:\\Users\\Nico\\my-app\\src\\components\\mapsComponent\\maps.component.jsx",["121"],"import { VectorMap } from '@south-paw/react-vector-maps';\r\nimport React, { Component } from 'react';\r\nimport nzMap from './united-kingdom-counties.json';\r\n//import nzMap from './europe-good.json';\r\nimport france from './france-new.json';\r\nimport styled from 'styled-components';\r\n\r\n//another map: https://www.react-simple-maps.io/examples/europe-map-with-graticule/\r\n//https://codesandbox.io/s/europe-map-with-graticule-t3xj0?from-embed=&file=/src/index.js\r\n\r\n//https://react-vector-maps.netlify.app/converter\r\n\r\nexport default class Graph extends Component {\t\r\n  render() {\r\n\r\n    const Map = styled.div`\r\n    margin: 1rem auto;\r\n    width: 510px;\r\n\r\n  svg {\r\n    stroke: #fff;\r\n\r\n    // All layers are just path elements\r\n    path {\r\n      fill: #a82b2b;\r\n      cursor: pointer;\r\n      outline: none;\r\n\r\n      // When a layer is hovered\r\n      &:hover {\r\n        fill: rgba(168,43,43,0.83);\r\n      }\r\n\r\n      // When a layer is focused.\r\n      &:focus {\r\n        fill: rgba(168,43,43,0.6);\r\n      }\r\n\r\n      // When a layer is 'checked' (via checkedLayers prop).\r\n      &[aria-checked='true'] {\r\n        fill: rgba(56,43,168,1);\r\n      }\r\n\r\n      // When a layer is 'selected' (via currentLayers prop).\r\n      &[aria-current='true'] {\r\n        fill: rgba(56,43,168,0.83);\r\n      }\r\n\r\n      // You can also highlight a specific layer via it's id\r\n      &[id=\"nz-can\"] {\r\n        fill: rgba(56,43,168,0.6);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n    \r\n\t\treturn (\r\n            <Map>\r\n                <VectorMap {...nzMap} checkedLayers={['nz-auk']} currentLayers={['nz-wgn']} />\r\n\r\n            </Map>\r\n            \r\n\t\t);\r\n\t}\r\n}\r\n","C:\\Users\\Nico\\my-app\\src\\components\\mapChart\\MapChart.jsx",["122","123","124","125","126"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Graticule,\r\n  Marker\r\n} from \"react-simple-maps\";\r\n\r\n//https://codesandbox.io/s/rmmzrkm75o?file=/src/Map.js\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n  const eu = [\r\n    \"FRA\",\r\n    \"DEU\",\r\n    \"ITA\",\r\n    \"BEL\",\r\n    \"ESP\",\r\n    \"LUX\",\r\n    \"IRL\",\r\n    \"NLD\",\r\n    \"DNK\",\r\n    \"PRT\",\r\n    \"SWE\",\r\n    \"FIN\",\r\n    \"AUT\",\r\n    \"GRC\",\r\n    \"POL\",\r\n    \"CZE\",\r\n    \"SVK\",\r\n    \"HUN\",\r\n    \"EST\",\r\n    \"LVA\",\r\n    \"LTU\",\r\n    \"ROU\",\r\n    \"BGR\",\r\n    \"HRV\",\r\n    \"SVN\"\r\n  ];\r\n\r\n  const schengen = [\r\n    \"FRA\",\r\n    \"DEU\",\r\n    \"ITA\",\r\n    \"BEL\",\r\n    \"ESP\",\r\n    \"LUX\",\r\n    \"NLD\",\r\n    \"DNK\",\r\n    \"PRT\",\r\n    \"SWE\",\r\n    \"FIN\",\r\n    \"AUT\",\r\n    \"GRC\",\r\n    \"POL\",\r\n    \"CZE\",\r\n    \"SVK\",\r\n    \"HUN\",\r\n    \"EST\",\r\n    \"LVA\",\r\n    \"LTU\",\r\n    \"HRV\",\r\n    \"SVN\",\r\n    \"HRV\",\r\n    \"CHE\",\r\n    \"NOR\",\r\n    \"ISL\"\r\n  ]\r\n\r\n  /*const highlighted=[\r\n    \"POL\"\r\n\r\n  ]*/\r\n\r\n  const eurozone=[\r\n    \"FRA\",\r\n    \"DEU\",\r\n    \"ITA\",\r\n    \"BEL\",\r\n    \"ESP\",\r\n    \"LUX\",\r\n    \"NLD\",\r\n    \"PRT\",\r\n    \"FIN\",\r\n    \"AUT\",\r\n    \"GRC\",\r\n    \"SVK\",\r\n    \"EST\",\r\n    \"LVA\",\r\n    \"LTU\",\r\n    \"SVN\",\r\n    \"IRL\"\r\n  ]\r\n\r\nconst MapChart = (props) => {\r\n\r\n  return (\r\n    <ComposableMap\r\n    projection=\"geoAzimuthalEqualArea\"\r\n    projectionConfig={{\r\n      rotate: [-9.0, -53.5, 0],\r\n      scale: 930,\r\n    }}\r\n    width={500}\r\n    style={{ width: \"100%\", height: \"auto\" }} \r\n  >\r\n    <Graticule stroke=\"#EAEAEC\" />\r\n    <Geographies geography={geoUrl}>\r\n      {({ geographies }) =>\r\n        geographies.map(geo => {\r\n          console.log(props.mode.mode);\r\n          var backgroundCountryColor = \"eu\";\r\n          var isHighlighted = eu.indexOf(geo.properties.ISO_A3) !== -1;\r\n          if(props.mode.mode === \"EU\"){\r\n            isHighlighted =\r\n            eu.indexOf(geo.properties.ISO_A3) !== -1;\r\n          }else if(props.mode.mode === \"Schengen\"){\r\n            isHighlighted =\r\n            schengen.indexOf(geo.properties.ISO_A3) !== -1;\r\n            backgroundCountryColor = \"blue\";\r\n          }else if(props.mode.mode === \"Eurozone\"){\r\n            isHighlighted =\r\n            eurozone.indexOf(geo.properties.ISO_A3) !== -1;\r\n            backgroundCountryColor = \"eu\";\r\n          }\r\n          else{\r\n            console.log(\"hello\");\r\n          }\r\n          return (\r\n          \r\n            <Geography\r\n              key={geo.rsmKey}\r\n              geography={geo}\r\n              style={{\r\n                /*default: {\r\n                  fill: \"#D6D6DA\",\r\n                  outline: \"none\"\r\n                },*/\r\n                hover: {\r\n                  fill: \"#E42\",\r\n                  outline: \"none\"\r\n                },\r\n                pressed: {\r\n                  fill: \"#E42\",\r\n                  outline: \"none\"\r\n                }\r\n              }}\r\n              fill={isHighlighted ? backgroundCountryColor==\"eu\" ? \"rgb(0, 27, 38)\" : \"#825051\" : \"#D6D6DA\"}//F53\r\n              stroke=\"white\"\r\n              strokeWidth=\"0.2px\"\r\n              onClick={() => console.log(geo.properties.ISO_A3, isHighlighted)}\r\n              onMouseEnter={() => {\r\n                const { NAME, POP_EST } = geo.properties;\r\n                //this.props.handler = `${NAME} — ${rounded(POP_EST)}`;\r\n              }}\r\n              \r\n              //fill=\"#9998A3\"\r\n              //stroke=\"#EAEAEC\"\r\n              //onClick={test}\r\n            />\r\n          )\r\n        }\r\n          )\r\n      }\r\n    </Geographies>\r\n    <Marker coordinates={[2.7, 46.8]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill={\"#fdfdfd\"} fontSize=\"8\" fontWeight=\"bold\">\r\n        FRA\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[4.7, 50.6]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        BEL\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[5.5, 52.2]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        NLD\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[7, 49.5]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        LUX\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[10.2, 51.4]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        DEU\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[-7.7, 53.3]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        IRL\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[12.2, 42.9]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        ITA\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[-3.4, 40.2]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        ESP\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[19.5, 52]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        POL\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[19.4, 47.0]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        HUN\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[17.1, 45.4]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        HRV\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[14.6, 47.4]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        AUT\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[20, 48.8]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        SVK\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[-8, 40]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        PRT\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[15.6, 49.6]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        CZE\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[14.6, 46]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        SVN\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[25.1, 45.6]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        ROU\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[25.3, 42.6]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        BGR\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[21.7, 38.9]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        GRC\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[24, 55.2]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        LTU\r\n      </text>\r\n    </Marker>\r\n\r\n    <Marker coordinates={[25.4,56.8]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        LVA\r\n      </text>\r\n    </Marker>\r\n\r\n    <Marker coordinates={[25.1,58.6]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        EST\r\n      </text>\r\n    </Marker>\r\n\r\n    <Marker coordinates={[25,62.3]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        FIN\r\n      </text>\r\n    </Marker>\r\n\r\n    <Marker coordinates={[15.7,62.7]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        SWE\r\n      </text>\r\n    </Marker>\r\n\r\n    <Marker coordinates={[8.5,62]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        NOR\r\n      </text>\r\n    </Marker>\r\n\r\n    <Marker coordinates={[8.1,46.8]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        CHE\r\n      </text>\r\n    </Marker>\r\n\r\n    <Marker coordinates={[-1.6,52]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        GBR\r\n      </text>\r\n    </Marker>\r\n\r\n    <Marker coordinates={[33,58]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        RUS\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[31,48.57]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        UKR\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[34.7,38.6]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        TUR\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[-18.19,64.62]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        ISL\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[9.6,35.5]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        TUN\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[3.15,35.2]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        DZA\r\n      </text>\r\n    </Marker>\r\n    <Marker coordinates={[-4.3,34.2]} fill=\"#777\">\r\n      <text textAnchor=\"middle\" fill=\"#fdfdfd\" fontSize=\"8\" fontWeight=\"bold\">\r\n        MAR\r\n      </text>\r\n    </Marker>\r\n    \r\n  </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","C:\\Users\\Nico\\my-app\\src\\components\\FirstPage\\FirstPage.jsx",["127","128","129","130","131"],"\r\nimport { Component } from 'react';\r\nimport MapChart from \"../mapChart/MapChart\";\r\nimport populationEurope from '../Images/populationEurope.jpg';\r\nimport metropolitanEconomies from '../Images/metropolitanEco.png';\r\nimport europeanLandscape from '../Images/europeanLandscape.jpg';\r\nimport europeanCartogram from '../Images/populationEurope.png';\r\nimport {CardList} from '../card-list/card-list.component';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport {SearchBox} from '../search-box/search-box.component';\r\n\r\n\r\nclass FirstPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);// super gives us access to \"this.state\"\r\n    this.state ={\r\n      countries: [],\r\n      searchField: '',\r\n      mode: 'EU'\r\n    };\r\n    this.handler = this.handler.bind(this);\r\n  }\r\n\r\n  handler(){\r\n    this.setState({\r\n      content: \"\"\r\n    })\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    fetch('https://restcountries.eu/rest/v2/regionalbloc/eu')\r\n    .then(\r\n      response => response.json()\r\n      ).then(countries => this.setState({countries: countries})\r\n    )\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchField: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    const { countries, searchField, mode } = this.state;\r\n    const filteredCountries = countries.filter(country => \r\n      country.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n    return (\r\n      <div className='App'>\r\n            \r\n            <div style={{\r\n              \r\n              /*position: \"absolute\",\r\n              top: \"25%\",\r\n              left: \"15%\"*/\r\n            }}>\r\n\r\n\r\n\r\n                <h3> {mode} </h3>\r\n                <span class=\"dot\" style={{backgroundColor:\"#001b26\"}} onClick={e => \r\n                    this.setState({ mode: 'EU'})\r\n                  }></span><span class=\"text\" style={{verticalAlign: \"middle\"}}>EU</span>\r\n                  <span class=\"dot\" style={{backgroundColor:\"#f0725c\"}} onClick={e => \r\n                    this.setState({ mode: 'Schengen'})\r\n                  }></span><span class=\"text\">Schengen Area</span>\r\n                  <span class=\"dot\" style={{backgroundColor:\"#1d1143\"}} onClick={e => \r\n                    this.setState({ mode: 'Eurozone'})\r\n                    }></span><span class=\"text\">Eurozone Area</span>\r\n                  </div>\r\n                <div style={{width:\"36%\", margin: \"auto\"}}>\r\n\r\n\r\n\r\n                  \r\n                <MapChart mode={{mode}}/>\r\n                </div>\r\n                \r\n        <Row>\r\n        <Col ></Col>\r\n        <Col >\r\n\r\n        <SearchBox \r\n        placeholder='search countries' \r\n        handleChange={this.handleChange}\r\n        />\r\n\r\n<CardList countries={filteredCountries}/>\r\n\r\n        </Col>\r\n        <Col ></Col>\r\n        </Row>\r\n\r\n        https://www.reddit.com/r/MapPorn/comments/lo3wbw/cheers_in_several_languages/?utm_source=share&utm_medium=web2x&context=3\r\n\r\n        <div style={{margin: \"auto\", width:\"55%\"}}>\r\n\r\n        <div style={{textAlign:\"center\"}}>\r\n          \r\n        </div>\r\n        \r\n        </div>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default FirstPage;","C:\\Users\\Nico\\my-app\\src\\components\\NavBar\\NavBar.jsx",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { useState } from \"react\";\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport FirstPage from \"../FirstPage/FirstPage\";\r\nimport Europe from \"../WorldLanguages/World\";\r\nimport Europe2 from \"../Europe/Europe2\";\r\n\r\nimport USPage from \"../us/US-Page\";\r\nimport Map from '../mapsComponent/maps.component';\r\nimport Graph from '../graph/graph.component';\r\nimport BarGraph from '../graph/bar-chart.component';\r\nimport Languages from '../Images/languages';\r\nimport Worldmap from \"../worldMap.component\";\r\nimport europeRegions from \"../Europe/europeRegions\";\r\n\r\n\r\nexport default function NavBar() {\r\n  const [content, setContent] = useState(\"\");\r\n  const [content2, setContent2] = useState(\"\");\r\n\r\n  /*return (\r\n    <div>\r\n      <Router>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n\r\n          <Navbar.Brand href=\"#home\">\r\n            <img\r\n              alt=\"\"\r\n              src=\"/components/logo.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{' '}\r\n            Carnet de bord\r\n          </Navbar.Brand>\r\n\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"europe\">Europe</Nav.Link>\r\n              <Nav.Link href=\"us\">US</Nav.Link>\r\n              <Nav.Link href=\"europeNuts\">World</Nav.Link>\r\n              <Nav.Link href=\"uk\">UK</Nav.Link>\r\n              <Nav.Link href=\"languages\">Economy</Nav.Link>\r\n              <Nav.Link href=\"languages\">Pacific</Nav.Link>\r\n              <Nav.Link href=\"languages\">China</Nav.Link>\r\n              <Nav.Link href=\"languages\">US+CANZUK</Nav.Link>\r\n              <Nav.Link href=\"languages\">Anglosphere</Nav.Link>\r\n              <Nav.Link href=\"languages\">America</Nav.Link>\r\n              <Nav.Link href=\"europeNuts2\">India</Nav.Link>\r\n\r\n              <NavDropdown title=\"World\" id=\"collasible-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n              <Nav.Link eventKey={2} href=\"#memes\">\r\n                Dank memes\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route path=\"/europe\">\r\n            <Europe2 />\r\n\r\n          </Route>\r\n          <Route path=\"/europeNuts\">\r\n            <div style={{ margin: \"auto\"}}>\r\n              <Europe />\r\n\r\n            </div>\r\n\r\n            <FirstPage />\r\n          </Route>\r\n          <Route path=\"/europeNuts2\">\r\n            <div>\r\n\r\n\r\n              <europeRegions />\r\n            </div>\r\n\r\n          </Route>\r\n          <Route path=\"/uk\">\r\n            <UK />\r\n          </Route>\r\n          <Route path=\"/languages\">\r\n            <Languages />\r\n          </Route>\r\n          <Route path=\"/us\">\r\n\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )*/\r\n\r\n  return(\r\n    <div>\r\n    <Home/>\r\n    </div>\r\n  )\r\n\r\n  function Home() {\r\n    return <div>\r\n      <div style={{ width: \"100%\", margin: \"auto\", marginTop: \"-8.3%\" }}>\r\n      <Worldmap />\r\n      </div>\r\n    </div>;\r\n  }\r\n  /*      <div style={{ float: \"center\" }}>\r\n        <Map />\r\n      </div>\r\n      <USPage />\r\n      <USPage />\r\n      <FirstPage /> */\r\n\r\n  function UK() {\r\n    return <div>\r\n\r\n      <div style={{ float: \"center\" }}>\r\n        <Map />\r\n      </div>\r\n\r\n    </div>;\r\n  }\r\n\r\n  function Users() {\r\n    return <div>\r\n      <BarGraph />\r\n      <Graph />\r\n    </div>;\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\n","C:\\Users\\Nico\\my-app\\src\\components\\Images\\languages.jsx",["151"],"import React, { Component } from 'react';\r\nimport worldEconomy2019 from './worldEconomy2019.jpg';\r\nimport ModalImage from \"react-modal-image\";\r\nimport './language-page.css';\r\n\r\n\r\nexport default class Languages extends Component {\t\r\n  render() {\r\n\t\treturn (\r\n            <div>\r\n\r\n                <ModalImage\r\n                  small=\"https://cdn.howmuch.net/articles/Draft-9-24f8.jpg\"\r\n                  className=\"image1\"\r\n                  large=\"https://cdn.howmuch.net/articles/Draft-9-24f8.jpg\"\r\n                  alt=\"All the World’s Wealth in One Visual\"\r\n                />\r\n\r\n            </div>\r\n            \r\n            \r\n\t\t);\r\n\t}\r\n}\r\n","C:\\Users\\Nico\\my-app\\src\\components\\us\\US-Page.jsx",["152","153","154"],"import React, { Component } from 'react';\r\nimport '../Images/language-page.css';\r\nimport US_MapChart from \"./US-mapChartComponent\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\n\r\nconst changeText = (name) => {\r\n    if(name === null){\r\n        return \"\";\r\n    }else{\r\n        name = \"https://www.states101.com/img/flags/svg/\" + name.replace(' ', '-').toLowerCase();\r\n        \r\n        var url = name + '.svg';\r\n        return url;\r\n    }\r\n  }\r\n\r\nexport default class USPage extends Component {\t\r\n    \r\n      constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                data: null\r\n            }\r\n        }\r\n\r\n        handleCallback = (childData) =>{\r\n            this.setState({data: childData});\r\n            console.log(this.state.data);\r\n\r\n        }\r\n\r\n  render() {\r\n      const {data} = this.state;\r\n      var logo = require('./us-flag/texas.svg'); \r\n      \r\n\t\treturn (\r\n            <div>\r\n\r\n\r\n                <h3> United States of America</h3>\r\n            <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\"> {data + \"  \"}\r\n                <img style={{width:\"35px\" }} src={changeText(data)} />\r\n            </ReactTooltip>\r\n\r\n            <div style={{width:\"70%\", margin:\"auto\"}}>\r\n\r\n            <US_MapChart  parentCallback = {this.handleCallback} />\r\n\r\n\r\n                </div>\r\n\r\n            <h2>Maps and Data from Reddit</h2>\r\n            <div class=\"reddit-embed center\" red-author=\"u/StevenMaurer\"\r\n            red-title=\"Map of the US by a truck driver who has seen most of it...\"\r\n            red-href=\"https://www.reddit.com/r/MapPorn/comments/lkxyg7/map_of_the_us_by_a_truck_driver_who_has_seen_most/about.json\" ></div>\r\n\r\n\r\n            <div class=\"reddit-embed center\" red-author=\"u/StevenMaurer\"\r\n            red-title=\"Map of the US by a truck driver who has seen most of it...\"\r\n            red-href=\"https://www.reddit.com/r/MapPorn/comments/l9f3w3/urban_megaregions_of_the_united_states_oc/about.json\" ></div>\r\n\r\n            \r\n            \r\n\r\n\r\n            </div>\r\n            \r\n            \r\n\t\t);\r\n\t}\r\n}\r\n","C:\\Users\\Nico\\my-app\\src\\components\\us\\US-mapChartComponent.js",["155"],"import React, { memo }  from \"react\";\r\nimport { geoCentroid } from \"d3-geo\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n  Annotation,\r\n  ZoomableGroup\r\n} from \"react-simple-maps\";\r\n\r\nimport allStates from \"./data/allstates.json\";\r\nimport { PatternLines } from \"@vx/pattern\";\r\n\r\n\r\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\nconst offsets = {\r\n  VT: [50, -8],\r\n  NH: [34, 2],\r\n  MA: [30, -1],\r\n  RI: [28, 2],\r\n  CT: [35, 10],\r\n  NJ: [34, 1],\r\n  DE: [33, 0],\r\n  MD: [47, 10],\r\n  DC: [49, 21]\r\n};\r\n\r\nconst US_MapChart = (props) => {\r\n\r\n  const markers = [\r\n    {\r\n      markerOffset: -6,\r\n      name: \"New York\",\r\n      coordinates: [-73.935242,40.730610]\r\n    },\r\n    {\r\n      markerOffset: -6,\r\n      name: \"Los Angeles\",\r\n      coordinates: [-118.243683,34.052235]\r\n    },\r\n    {\r\n      markerOffset: -6,\r\n      name: \"Chicago\",\r\n      coordinates: [-87.623177,41.881832]\r\n    }\r\n  ];\r\n  \r\n  return (\r\n    <ComposableMap height=\"500\" data-tip=\"\" projection=\"geoAlbersUsa\">\r\n\r\n      <PatternLines\r\n        id=\"lines\"\r\n        height={6}\r\n        width={6}\r\n        stroke=\"#D6D6DA\"\r\n        strokeWidth={4}\r\n        background=\"#776865\"\r\n        orientation={[\"diagonal\"]}\r\n      />\r\n\r\n      <Geographies geography={geoUrl}>\r\n        {({ geographies }) => (\r\n          <>\r\n            {geographies.map(geo => (\r\n              \r\n              <Geography\r\n                key={geo.rsmKey}\r\n                stroke=\"#FFF\"\r\n                geography={geo}\r\n                onMouseEnter={() => {\r\n                  props.parentCallback(geo.properties.name);\r\n                  console.log(geo.properties.name===\"Texas\");\r\n                }}\r\n                onMouseLeave={() => {\r\n                  //props.parentCallback(\"\");\r\n                  //console.log(\"\");\r\n                }}\r\n                style={{\r\n                  /*default: {\r\n                    fill: \"#D6D6DA\",\r\n                    outline: \"none\"\r\n                  },*/\r\n                  hover: {\r\n                    fill: \"#F53\",\r\n                    outline: \"none\"\r\n                  },\r\n                  pressed: {\r\n                    fill: \"#E42\",\r\n                    outline: \"none\"\r\n                  }\r\n                }}\r\n                fill={geo.properties.name === \"Texas\" ? \"url('#lines')\" : \"#D6D6DA\"}\r\n              />\r\n            ))}\r\n            {geographies.map(geo => {\r\n              const centroid = geoCentroid(geo);\r\n              const cur = allStates.find(s => s.val === geo.id);\r\n              return (\r\n                <g key={geo.rsmKey + \"-name\"}>\r\n                  {cur &&\r\n                    centroid[0] > -160 &&\r\n                    centroid[0] < -67 &&\r\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n                      <Marker coordinates={centroid}>\r\n                        <text y=\"2\" fontSize={11} textAnchor=\"middle\" fontFamily= \"Roboto, system-ui\">\r\n                          {cur.id}\r\n                        </text>\r\n                      </Marker>\r\n                    ) : (\r\n                      <Annotation\r\n                        subject={centroid}\r\n                        dx={offsets[cur.id][0]}\r\n                        dy={offsets[cur.id][1]}\r\n                      >\r\n                        <text x={4} fontSize={11} alignmentBaseline=\"middle\" fontFamily= \"Roboto, system-ui\" fill= \"#101010\">\r\n                          {cur.id}\r\n                        </text>\r\n                      </Annotation>\r\n                    ))}\r\n                </g>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </Geographies>\r\n\r\n      {markers.map(({ name, coordinates, markerOffset }) => (\r\n        <Marker key={name} coordinates={coordinates}>\r\n          <circle r={4} fill=\"#F00\" stroke=\"#fff\" strokeWidth={1} />\r\n          <text\r\n            textAnchor=\"middle\"\r\n            y={markerOffset}\r\n            style={{ fontFamily: \"Roboto, system-ui\", fill: \"#101010\", fontSize: 11}}\r\n          >\r\n            {name}\r\n          </text>\r\n        </Marker>\r\n      ))}\r\n\r\n\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default memo (US_MapChart);\r\n","C:\\Users\\Nico\\my-app\\src\\components\\Europe\\Europe2.jsx",["156","157","158","159","160","161","162","163","164","165","166","167"],"import { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson';\r\nimport $ from 'jquery';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Tooltip from \"react-simple-tooltip\";\r\n\r\n\r\nlet data = require(\"./europe.topo.json\");\r\n\r\nvar width = 1000;\r\n\r\nconst nuts = data;\r\n\r\n/*const changeCountry = (props) => {\r\n  console.log(props);\r\n}*/\r\n\r\n\r\nclass Europe extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);// super gives us access to \"this.state\"\r\n    this.state ={\r\n      selectedRegion: '-'\r\n    };\r\n  }\r\n  /*sendData = () => {\r\n    this.parentCallback(this.state.selectedRegion);\r\n  }*/\r\n\r\n  onTrigger = () => {\r\n    \r\n}\r\n\r\n  //props.parentCallback(geo.properties.name);\r\n  /*sendData = () => {\r\n    this.props.parentCallback(\"Hey Popsie, How’s it going?\");\r\n},*/\r\n\r\n  /*changeCountry = (props) => {\r\n    console.log(props);\r\n    this.setState(props => {\r\n      return { selectedRegion: 'COOL' };\r\n    });\r\n  }\r\n*/\r\n\r\n  componentDidMount() {\r\n\r\n    //build tooltip element\r\n\tvar tooltip = document.getElementById(\"tooltip\");\r\n\r\n\td3.select(\"#tooltip\").style(\"font-family\", \"Myriad Pro, Myriad, MyriadPro-Regular, 'Myriad Pro Regular', MyriadPro, 'Myriad Pro', 'Liberation Sans', 'Nimbus Sans L', 'Helvetica Neue', vegur, Vegur, Helvetica, Arial, sans-serif\");\r\n\t\r\n\r\n    console.log(\"componentDidMount\");\r\n\r\n      console.log(\"nuts\");\r\n      //loadingDiv.hide();\r\n      $(\"#but\").show();\r\n      //prepare SVG element\r\n      var height = width*(nuts.bbox[3]-nuts.bbox[1])/(nuts.bbox[2]-nuts.bbox[0]),\r\n        svg = d3.select(\"#map\").attr(\"width\", width).attr(\"height\", height),\r\n        path = d3.geoPath().projection(d3.geoIdentity().reflectY(true).fitSize([width,height], topojson.feature(nuts, nuts.objects.gra)))\r\n      ;\r\n      //clear SVG element\r\n      svg.selectAll(\"*\").remove()\r\n\r\n      var pattS=3, patt = svg.append(\"pattern\").attr(\"id\",\"patt_cntrg\").attr(\"x\",\"0\").attr(\"y\",\"0\").attr(\"width\",pattS).attr(\"height\",pattS).attr(\"patternUnits\",\"userSpaceOnUse\");\r\n\t\t\tpatt.append(\"rect\").attr(\"x\",\"0\").attr(\"y\",\"0\").attr(\"width\",pattS).attr(\"height\",pattS).style(\"stroke\",\"none\").style(\"fill\",\"white\")\r\n\t\t\tpatt.append(\"circle\").attr(\"cx\",pattS/2).attr(\"cy\",pattS/2).attr(\"r\",pattS/2*0.3).style(\"stroke\",\"none\").style(\"fill\",\"gray\");\r\n\r\n      var pattS=3, patt = svg.append(\"pattern\").attr(\"id\",\"patt_nutsrg\").attr(\"x\",\"0\").attr(\"y\",\"0\").attr(\"width\",pattS).attr(\"height\",pattS).attr(\"patternUnits\",\"userSpaceOnUse\");\r\n\t\t\tpatt.append(\"rect\").attr(\"x\",\"0\").attr(\"y\",\"0\").attr(\"width\",pattS).attr(\"height\",pattS).style(\"stroke\",\"none\").style(\"fill\",\"#fdbf6f\")\r\n\t\t\tpatt.append(\"circle\").attr(\"cx\",pattS/2).attr(\"cy\",pattS/2).attr(\"r\",pattS/2*0.3).style(\"stroke\",\"none\").style(\"fill\",\"white\");\r\n\r\n      var pattS=7, patt = svg.append(\"pattern\").attr(\"id\",\"patt_sea\").attr(\"x\",\"0\").attr(\"y\",\"0\").attr(\"width\",pattS).attr(\"height\",pattS).attr(\"patternUnits\",\"userSpaceOnUse\");\r\n\t\t\tpatt.append(\"rect\").attr(\"x\",0).attr(\"y\",0).attr(\"width\",pattS).attr(\"height\",pattS).style(\"stroke\",\"none\").style(\"fill\",\"#b3cde3\")\r\n\t\t\tpatt.append(\"circle\").attr(\"cx\",pattS/2).attr(\"cy\",0).attr(\"r\",pattS/2).style(\"fill\",\"#b3cde3\").style(\"stroke\",\"white\").style(\"stroke-width\",0.7);\r\n\t\t\r\n\r\n\t\t//define filter for coastal margin\r\n\t\tsvg.append(\"filter\").attr(\"id\",\"blur\").attr(\"x\",\"-200%\").attr(\"y\",\"-200%\").attr(\"width\",\"400%\").attr(\"height\",\"400%\")\r\n\t\t\t.append(\"feGaussianBlur\").attr(\"in\",\"SourceGraphic\").attr(\"stdDeviation\",\"4\")\r\n\t\t;\r\n\r\n      //prepare drawing group\r\n      var g = svg.append(\"g\").attr(\"transform\",\"translate(0,0)\");\r\n\t\t\r\n\r\n      //draw background rectangle\r\n\t\tg.append(\"rect\").attr(\"id\",\"bck\").attr(\"x\",0).attr(\"y\",0).attr(\"width\", width).attr(\"height\", height)\r\n\t\t//.style(\"fill\",\"#b3cde3\");\r\n\t\t.style(\"fill\",\"url(#patt_sea)\");\r\n\t\t\r\n\t\t//draw coastal margin\r\n\t\tg.append(\"g\").selectAll(\"path\").data(topojson.feature(nuts, nuts.objects.cntbn).features).enter()\r\n\t\t\t.append(\"path\").attr(\"d\", path)\r\n\t\t\t.style(\"fill\",\"none\").style(\"stroke-width\",\"8px\").style(\"filter\",\"url(#blur)\").style(\"stroke-linejoin\",\"round\").style(\"stroke-linecap\",\"round\")\r\n\t\t\t.style(\"stroke\",function(bn){ if(bn.properties.co===\"T\") return \"white\"; return \"none\"; })\r\n\t\t;\r\n\t\tg.append(\"g\").selectAll(\"path\").data(topojson.feature(nuts, nuts.objects.nutsbn).features).enter()\r\n\t\t\t.append(\"path\").attr(\"d\", path)\r\n\t\t\t.style(\"fill\",\"none\").style(\"stroke-width\",\"8px\").style(\"filter\",\"url(#blur)\").style(\"stroke-linejoin\",\"round\").style(\"stroke-linecap\",\"round\")\r\n\t\t\t.style(\"stroke\",function(bn){ if(bn.properties.co===\"T\") return \"white\"; return \"none\"; })\r\n\t\t;\r\n\t\t//draw graticule\r\n\t\tg.append(\"g\").selectAll(\"path\").data(topojson.feature(nuts, nuts.objects.gra).features).enter()\r\n\t\t\t.append(\"path\").attr(\"d\", path)\r\n\t\t\t.style(\"fill\",\"none\").style(\"stroke-width\",\"1px\").style(\"stroke\",\"gray\");\r\n\t\t//draw country regions\r\n\t\tg.append(\"g\").selectAll(\"path\").data(topojson.feature(nuts, nuts.objects.cntrg).features).enter()\r\n\t\t\t.append(\"path\").attr(\"d\", path)\r\n\t\t\t//.on(\"mouseover\", function(rg) { d3.select(this).style(\"fill\", \"#ddd\"); tooltip.mouseover(\"<b>\"+rg.properties.na+\"</b><br>\"+rg.properties.id); })\r\n\t\t\t//.on(\"mousemove\", function() { tooltip.mousemove(); })\r\n\t\t\t//.on(\"mouseout\", function() { d3.select(this).style(\"fill\",\"url(#patt_cntrg)\"); tooltip.mouseout(); })\r\n\t\t\t.style(\"fill\",\"#f2f2f2\")\r\n\t\t\t.style(\"fill\",\"url(#patt_cntrg)\")\r\n\t\t\t//.style(\"filter\",\"url(#dispfil)\")\r\n\t\t;\r\n    //draw nuts regions\r\n\t\tg.append(\"g\").selectAll(\"path\").data(topojson.feature(nuts, nuts.objects.nutsrg).features).enter()\r\n    .append(\"path\").attr(\"d\", path)\r\n\r\n    .on(\"mouseover\", function(rg) { \r\n      d3.select(rg.target).style(\"fill\", \"#ff7f00\"); \r\n      console.log(rg.target);\r\n      console.log(rg.target.__data__.properties.na);\r\n      //const id = rg.originalTarget.__data__.properties.na;\r\n\r\n\r\n      //this.changeCountry(id);\r\n      this.setState({\r\n        selectedRegion: rg.target.__data__.properties.na,\r\n      });\r\n\r\n    }.bind(this))\r\n\r\n    \r\n    /*.on(\"mousemove\", function(rg) { \r\n      if(rg.originalTarget != undefined){\r\n        this.setState({\r\n          selectedRegion: rg.originalTarget.properties.na,\r\n        });\r\n      }\r\n      console.log(rg);\r\n    \r\n    }.bind(this))*/\r\n\r\n    .on(\"mousemove\", function(event) { \r\n      //d3.select(this).style(\"fill\", \"#ff7f00\"); \r\n      $( \".tooltip\" ).css({\r\n        \"left\" : event.pageX-850,\r\n        \"top\" : event.pageY-60,\r\n\r\n      });\r\n    \r\n    })\r\n\r\n    .on(\"click\", function(rg) { \r\n      this.setState({\r\n        selectedRegion: \"wesh pk tu click?\",\r\n      });\r\n\r\n    }.bind(this))\r\n\r\n    .on(\"mouseout\", function() { \r\n      d3.select(this).style(\"fill\",\"url(#patt_nutsrg)\"); \r\n    })\r\n\r\n    .style(\"fill\",\"#fdbf6f\")\r\n    .style(\"fill\",\"url(#patt_nutsrg)\")\r\n    //.style(\"filter\",\"url(#dispfil)\")\r\n  ;\r\n\r\n      //draw country regions\r\n      g.append(\"g\").selectAll(\"path\").data(topojson.feature(nuts, nuts.objects.cntrg).features).enter()\r\n        .append(\"path\").attr(\"d\", path)\r\n        .style(\"fill\",\"url(#patt_cntrg)\")\r\n        //.style(\"filter\",\"url(#dispfil)\")\r\n      ;\r\n\r\n      //draw country boundaries\r\n      g.append(\"g\").selectAll(\"path\").data(topojson.feature(nuts, nuts.objects.cntbn).features).enter()\r\n        .append(\"path\").attr(\"d\", path)\r\n        .style(\"fill\",\"none\")\r\n        .style(\"stroke\",function(bn){ if(bn.properties.co===\"T\") return \"#1f78b4\"; return \"gray\"; })\r\n        .style(\"stroke-width\",\"1.2px\")\r\n        .style(\"stroke-linejoin\",\"round\").style(\"stroke-linecap\",\"round\")\r\n      ;\r\n      //draw nuts boundaries\r\n      var bn = topojson.feature(nuts, nuts.objects.nutsbn).features;\r\n      bn.sort(function(bn1,bn2){ return bn2.properties.lvl - bn1.properties.lvl; });\r\n      g.append(\"g\").selectAll(\"path\").data(bn).enter()\r\n        .append(\"path\").attr(\"d\", path)\r\n        .style(\"fill\",\"none\")\r\n        .style(\"stroke\",function(bn){\r\n          if(bn.properties.co===\"T\") return \"#1f78b4\";\r\n          if(bn.properties.oth===\"T\") return \"#666\";\r\n          if(bn.properties.lvl==0) return \"#444\";\r\n          return \"#666\";\r\n        })\r\n        .style(\"stroke-width\",function(bn){\r\n          if(bn.properties.co===\"T\") return \"1px\";\r\n          if(bn.properties.lvl==0) return \"1.5px\";\r\n          if(bn.properties.lvl==1) return \"1.1px\";\r\n          if(bn.properties.lvl==2) return \"1.1px\";\r\n          if(bn.properties.lvl==3) return \"0.6px\";\r\n          return \"1.1px\";\r\n        })\r\n        .style(\"stroke-linejoin\",\"round\").style(\"stroke-linecap\",\"round\")\r\n      \r\n    \r\n  }\r\n/*<ReactTooltip place=\"top\" type=\"dark\" effect=\"float\">\r\n                {this.state.selectedRegion}\r\n            </ReactTooltip>*/ \r\n\r\n\r\n            /*https://codesandbox.io/s/xwijz?file=/src/index.js*/\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n\r\n      <h3>Europe</h3>\r\n\r\n      <div className=\"tooltip\" style={{display: \"inline-block\", position: \"relative\", padding: \".2em 1em\", backgroundColor: \"black\", color:\"white\", opacity:\"0.8\"}}>\r\n      {this.state.selectedRegion}\r\n        </div>\r\n\r\n           \r\n      <div ><svg id=\"map\"></svg></div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Europe;","C:\\Users\\Nico\\my-app\\src\\components\\Europe\\europeRegions.jsx",["168","169","170"],"import React, { Component } from 'react';\r\nimport Europe2 from \"./Europe2\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Tooltip from \"react-simple-tooltip\"\r\n\r\n\r\n\r\n    export default class europeRegions extends Component {\t\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: \"test\"\r\n        }\r\n    }\r\n\r\n    handleCallback = (childData) =>{\r\n        this.setState({data: childData});\r\n        console.log(this.state.data);\r\n\r\n    }\r\n    render() {\r\n        const {data} = this.state;\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Europe2 parentCallback = {this.handleCallback} />\r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n};\r\n\r\n","C:\\Users\\Nico\\my-app\\src\\components\\search-box\\search-box.component.jsx",[],"C:\\Users\\Nico\\my-app\\src\\components\\worldMap.component.jsx",["171","172","173","174","175","176","177"],"import React, { useState, useEffect } from \"react\";\r\nimport Europe from \"./WorldLanguages/World\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport axios from 'axios';\r\n\r\nconst changeText = (name) => {\r\n    var url = \"\";\r\n    if (name === null) {\r\n        return \"\";\r\n    } else {\r\n        if (name != \"\") {\r\n            url = \"https://www.countryflags.io/\" + name.toLowerCase() + \"/flat/64.png\";\r\n        } else {\r\n            url = \"\"\r\n        }\r\n        return url;\r\n    }\r\n}\r\n\r\n//https://restcountries.eu/rest/v2/alpha/co\r\n\r\nfunction Worldmap() {\r\n    const [content, setContent] = useState(\"test\");\r\n    const [nameContent, setNameTooltipContent] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [data, setData] = useState(\"\");\r\n    const [capital, setCapital] = useState(\"\");\r\n\r\n    useEffect(async () => {\r\n        if (content != \"\") {\r\n            console.log({ content });\r\n            const result = await axios(\r\n                'https://restcountries.eu/rest/v2/alpha/' + content.toLowerCase(),\r\n            );\r\n            console.log(result.data);\r\n            if (result.data.languages[1] != undefined) {\r\n                setData(result.data.languages[0].name + \" and \" + result.data.languages[1].name);\r\n                setCapital(result.data.capital);\r\n\r\n            }\r\n            else {\r\n                setData(result.data.languages[0].name);\r\n                setCapital(result.data.capital);\r\n            }\r\n        } else {\r\n            console.log(\"out\");\r\n        }\r\n    });\r\n\r\n\r\n        var tooltipContent = <div><img style={{ width: '30px' }} src={changeText(content)}></img> -\r\n        <text style={{ fontWeight: \"bold\" }}>{nameContent} - {capital}</text>\r\n        <p style={{ maxWidth: \"300px\", textAlign: \"left\" }}>{data}</p>\r\n        <p style={{ maxWidth: \"300px\", textAlign: \"left\" }}>{comment}</p></div> ;\r\n\r\n      if(content == \"\") {\r\n        tooltipContent = \"\";\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{position: \"absolute\", top: \"0.5em\"}}>hello</h1>\r\n            <Europe\r\n                setTooltipContent={setContent}\r\n                setNameTooltipContent={setNameTooltipContent}\r\n                setComment={setComment}\r\n            />\r\n\r\n            <ReactTooltip >\r\n                {tooltipContent}\r\n            </ReactTooltip>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Worldmap;","C:\\Users\\Nico\\my-app\\src\\components\\WorldLanguages\\World.jsx",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"import React, { memo, useEffect, useState } from \"react\";\r\nimport { csv } from \"d3-fetch\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n} from \"react-simple-maps\";\r\nimport { PatternLines } from \"@vx/pattern\";\r\nimport frenchSpeakers from './frenchSpeakers.csv';\r\nimport latlongCountries from './world_country_and_usa_states_latitude_and_longitude_values.csv';\r\nimport { ZoomableGroup } from \"react-simple-maps\"\r\nimport { LinearGradient } from '@vx/gradient';\r\n\r\n//https://vx-demo.vercel.app/docs/group\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n// https://www.worldatlas.com/articles/top-coffee-producing-countries.html\r\n\r\nconst spanSpeaking = [\r\n  \"ARG\", \"CHL\", \"URY\", \"COL\", \"HND\", \"MEX\", \"GTM\", \"PER\", \"NIC\", \"CRI\", \"SLV\", \"ECU\", \"VEN\",\r\n  \"DOM\", \"CUB\", \"PAN\", \"BOL\", \"PRY\", \"ESP\", \"GNQ\"\r\n];\r\n\r\nconst canada = [\r\n  \"CAN\"\r\n]\r\n\r\nfunction generateCircle(deg) {\r\n  if (!deg) return [[-180, 0], [-90, 0], [0, 0], [90, 0], [180, 0]];\r\n  return new Array(361).fill(1).map((d, i) => {\r\n    return [-180 + i, deg];\r\n  });\r\n}\r\n\r\n//https://en.wikipedia.org/wiki/Geographical_distribution_of_French_speakers\r\n/**      <Sphere stroke=\"#DDD\" strokeWidth={0.3} />\r\n      <Graticule stroke=\"#DDD\" strokeWidth={0.2} /> */\r\nconst colorScale = scaleLinear()\r\n  .domain([0, 0.72])\r\n  .range([\"#ffedea\", \"#105d8b\"]);\r\n\r\nconst colorScale2 = scaleLinear()\r\n  .domain([0, 0.70])\r\n  .range([\"#ffedea\", \"#b30000\"]);\r\n\r\nconst World = ({ setTooltipContent, setNameTooltipContent, setComment }) => {\r\n  const [data, setData] = useState([]);\r\n  const [latLongdata, setLatLongData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    csv(frenchSpeakers).then((data) => {\r\n      setData(data);\r\n    });\r\n\r\n    //latlongCountries\r\n\r\n    csv(latlongCountries).then((data) => {\r\n      setLatLongData(data);\r\n    });\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\" width=\"900\" height=\"1400\" zoom=\"0.5\">\r\n      <ZoomableGroup>\r\n      <PatternLines\r\n        id=\"lines\"\r\n        height={5}\r\n        width={5}\r\n        stroke=\"#776865\"\r\n        strokeWidth={0.5}\r\n        background=\"#002b80\"\r\n        orientation={[\"diagonal\"]}\r\n      />\r\n      \r\n      //canada\r\n      <LinearGradient id=\"gradient\" from=\"#990000\" to=\"#002a6b\" x1=\"60.7%\" y1=\"0%\" x2=\"61%\" y2=\"0%\"/>;\r\n\r\n      <PatternLines\r\n        id=\"linesEngFr\"\r\n        height={5}\r\n        width={5}\r\n        stroke=\"#002b80\"\r\n        strokeWidth={0.6}\r\n        strokeLinecap= \"butt\"\r\n        background=\"red\"\r\n        shapeRendering=\"100\"\r\n        orientation={[\"diagonal\"]}\r\n      />\r\n\r\n\r\n      {data.length > 0 && (\r\n        <Geographies geography={geoUrl} stroke=\"#000\" strokeWidth={0.4}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              var color = \"white\";\r\n              \r\n              const d = latLongdata.find((s) => s.country_code === geo.properties.ISO_A2);\r\n\r\n\r\n              if(d !== undefined){\r\n                color = colorScale2(d[\"english\"]);\r\n                console.log(\"d\", d);\r\n                if(d.french !== \"\" && d.french >d.english ){\r\n                  color = colorScale(d[\"french\"]);\r\n                }\r\n              }\r\n\r\n              const isCAN =\r\n                canada.indexOf(geo.properties.ISO_A3) !== -1;\r\n              if (isCAN) {\r\n                color = \"url('#gradient')\"\r\n              }\r\n\r\n              return (\r\n\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    setTooltipContent(`${geo.properties.ISO_A2}`);\r\n                    setNameTooltipContent(`${geo.properties.NAME}`);\r\n\r\n                    //get the comment\r\n                    const d = latLongdata.find((s) => s.country_code === geo.properties.ISO_A2);\r\n                    var comment = \"\";\r\n                    if(d !== undefined){\r\n                      console.log(\"d\", d);\r\n                      if(d[\"com\"] != \"\"){\r\n                        comment = d[\"com\"];\r\n                      }\r\n                    }\r\n                    setComment(comment);\r\n\r\n                    console.log(geo.properties);\r\n                  }}\r\n\r\n\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                    setNameTooltipContent(\"\");\r\n                    console.log(\"\");\r\n                  }}\r\n                  style={{\r\n                    hover: {\r\n                      fill: \"#009999\",\r\n                      outline: \"none\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\"\r\n                    }\r\n                  }}\r\n\r\n                  fill={color}\r\n\r\n                  onClick={() => {\r\n                    setTooltipContent(`${geo.properties.ISO_A2}`);\r\n                    setNameTooltipContent(`${geo.properties.NAME}`);\r\n                    console.log(geo.properties);\r\n                  }}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>)}\r\n\r\n        \r\n\r\n      {latLongdata.map(({ latitude, longitude, country, english, french, englishIsland, smallCountry}) => {\r\n        console.log(\"english -> \" + english);\r\n        var lat = parseInt(latitude);\r\n        var long = parseInt(longitude);\r\n        if(englishIsland== 1){\r\n          lat = lat+1.5;\r\n          long = long+1;\r\n        }\r\n\r\n        if (english.length > 0 &&(english > french) && english != 1 && english > 0.04 && smallCountry != 1) {\r\n          return(\r\n            <Marker key={\"annot\"} coordinates={[long, lat]} country={country}>\r\n              <text\r\n                textAnchor=\"middle\"\r\n                style={{ fontFamily: \"system-ui\", fill: \"yellow\", fontSize: 5, pointerEvents: \"none\", opacity: \"1\" }}\r\n              >\r\n                {Math.round(english * 100)}%\r\n              </text>\r\n            </Marker>\r\n          )\r\n        }\r\n      })}\r\n\r\n\r\n      {latLongdata.map(({ latitude, longitude, country, englishIsland, country_code }) => {\r\n        if (englishIsland == 1) {\r\n          return(\r\n            <Marker data-tip=\"\" key={\"annot\"} coordinates={[longitude, latitude]} country_code={country_code} \r\n            onMouseEnter={() =>{\r\n              setTooltipContent(country_code);\r\n              setNameTooltipContent(country);\r\n              }}\r\n              onMouseLeave={() => {\r\n                setTooltipContent(\"\");\r\n                setNameTooltipContent(\"\");\r\n                console.log(\"\");\r\n              }}\r\n            >\r\n            <circle r={1.6} fill=\"#9e0307\" stroke=\"black\" strokeWidth={0.3} />\r\n                        \r\n            </Marker>\r\n          )\r\n        }\r\n      })}\r\n      \r\n      {latLongdata.map(({ latitude, longitude, country, frenchIslands, country_code }) => {\r\n        \r\n        if (frenchIslands == 1) {\r\n          return(\r\n            <Marker key={\"annot\"} coordinates={[longitude, latitude]} country_code={country_code} country={country}\r\n            onMouseEnter={() =>{\r\n              setTooltipContent(country_code);\r\n              setNameTooltipContent(country);\r\n              }}\r\n              onMouseLeave={() => {\r\n                setTooltipContent(\"\");\r\n                setNameTooltipContent(\"\");\r\n                console.log(\"\");\r\n              }}>\r\n                        <circle r={1.6} fill=\"#3e668a\" stroke=\"black\" strokeWidth={0.3} />\r\n            </Marker>\r\n          )\r\n        }\r\n      })}\r\n\r\n      {latLongdata.map(({ latitude, longitude, country, french, english, frenchIslands }) => {\r\n\r\n        var lat = parseInt(latitude);\r\n        var long = parseInt(longitude);\r\n        if(frenchIslands== 1){\r\n          lat = lat+0.9;\r\n          long = long+0.9;\r\n        }\r\n\r\n\r\n        if (french != \"\" && (french > english) && french != 1 && french >= 0.09) {\r\n          return (\r\n            <Marker key={\"frenchIlands\"+country} coordinates={[(long), (lat)]} country={country}>\r\n              <text\r\n                textAnchor=\"middle\"\r\n                style={{ fontFamily: \"system-ui\", fill: \"black\", fontSize: 5, pointerEvents: \"none\", opacity: \"1\" }}\r\n              >\r\n                {\r\n                Math.round(french * 100)\r\n                \r\n                }%\r\n              </text>\r\n            </Marker>\r\n          )\r\n        }\r\n      })}\r\n\r\n\r\n      </ZoomableGroup>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default memo(World);","C:\\Users\\Nico\\my-app\\src\\components\\WorldLanguages\\percentage.js",[],"C:\\Users\\Nico\\my-app\\src\\components\\WorldLanguages\\islands.js",[],"C:\\Users\\Nico\\my-app\\src\\components\\WorldLanguages\\englishSpeakingCountries.js",[],"C:\\Users\\Nico\\my-app\\src\\components\\WorldLanguages\\engIsles.js",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":17},{"ruleId":"194","replacedBy":"202"},{"ruleId":"196","replacedBy":"203"},{"ruleId":"198","severity":1,"message":"204","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":14},{"ruleId":"198","severity":1,"message":"205","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"206","line":1,"column":27,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"208","line":149,"column":59,"nodeType":"209","messageId":"210","endLine":149,"endColumn":61},{"ruleId":"198","severity":1,"message":"211","line":154,"column":25,"nodeType":"200","messageId":"201","endLine":154,"endColumn":29},{"ruleId":"198","severity":1,"message":"212","line":154,"column":31,"nodeType":"200","messageId":"201","endLine":154,"endColumn":38},{"ruleId":"198","severity":1,"message":"213","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":24},{"ruleId":"198","severity":1,"message":"214","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":29},{"ruleId":"198","severity":1,"message":"215","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":25},{"ruleId":"198","severity":1,"message":"216","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":25},{"ruleId":"198","severity":1,"message":"217","line":9,"column":20,"nodeType":"200","messageId":"201","endLine":9,"endColumn":29},{"ruleId":"198","severity":1,"message":"218","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":16},{"ruleId":"198","severity":1,"message":"219","line":2,"column":18,"nodeType":"200","messageId":"201","endLine":2,"endColumn":21},{"ruleId":"198","severity":1,"message":"220","line":2,"column":23,"nodeType":"200","messageId":"201","endLine":2,"endColumn":34},{"ruleId":"198","severity":1,"message":"221","line":4,"column":20,"nodeType":"200","messageId":"201","endLine":4,"endColumn":26},{"ruleId":"198","severity":1,"message":"222","line":5,"column":3,"nodeType":"200","messageId":"201","endLine":5,"endColumn":9},{"ruleId":"198","severity":1,"message":"223","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":8},{"ruleId":"198","severity":1,"message":"224","line":7,"column":3,"nodeType":"200","messageId":"201","endLine":7,"endColumn":7},{"ruleId":"198","severity":1,"message":"199","line":9,"column":8,"nodeType":"200","messageId":"201","endLine":9,"endColumn":17},{"ruleId":"198","severity":1,"message":"225","line":10,"column":8,"nodeType":"200","messageId":"201","endLine":10,"endColumn":14},{"ruleId":"198","severity":1,"message":"226","line":11,"column":8,"nodeType":"200","messageId":"201","endLine":11,"endColumn":15},{"ruleId":"198","severity":1,"message":"227","line":13,"column":8,"nodeType":"200","messageId":"201","endLine":13,"endColumn":14},{"ruleId":"198","severity":1,"message":"228","line":17,"column":8,"nodeType":"200","messageId":"201","endLine":17,"endColumn":17},{"ruleId":"198","severity":1,"message":"229","line":19,"column":8,"nodeType":"200","messageId":"201","endLine":19,"endColumn":21},{"ruleId":"198","severity":1,"message":"230","line":23,"column":10,"nodeType":"200","messageId":"201","endLine":23,"endColumn":17},{"ruleId":"198","severity":1,"message":"231","line":23,"column":19,"nodeType":"200","messageId":"201","endLine":23,"endColumn":29},{"ruleId":"198","severity":1,"message":"232","line":24,"column":10,"nodeType":"200","messageId":"201","endLine":24,"endColumn":18},{"ruleId":"198","severity":1,"message":"233","line":24,"column":20,"nodeType":"200","messageId":"201","endLine":24,"endColumn":31},{"ruleId":"198","severity":1,"message":"234","line":131,"column":12,"nodeType":"200","messageId":"201","endLine":131,"endColumn":14},{"ruleId":"198","severity":1,"message":"235","line":141,"column":12,"nodeType":"200","messageId":"201","endLine":141,"endColumn":17},{"ruleId":"198","severity":1,"message":"236","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":24},{"ruleId":"198","severity":1,"message":"237","line":35,"column":11,"nodeType":"200","messageId":"201","endLine":35,"endColumn":15},{"ruleId":"238","severity":1,"message":"239","line":43,"column":17,"nodeType":"240","endLine":43,"endColumn":71},{"ruleId":"241","severity":1,"message":"242","line":48,"column":13,"nodeType":"240","endLine":48,"endColumn":68},{"ruleId":"198","severity":1,"message":"243","line":9,"column":3,"nodeType":"200","messageId":"201","endLine":9,"endColumn":16},{"ruleId":"198","severity":1,"message":"244","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":20},{"ruleId":"198","severity":1,"message":"245","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":15},{"ruleId":"198","severity":1,"message":"246","line":52,"column":6,"nodeType":"200","messageId":"201","endLine":52,"endColumn":13},{"ruleId":"247","severity":1,"message":"248","line":74,"column":11,"nodeType":"200","messageId":"249","endLine":74,"endColumn":16},{"ruleId":"247","severity":1,"message":"250","line":74,"column":20,"nodeType":"200","messageId":"249","endLine":74,"endColumn":24},{"ruleId":"247","severity":1,"message":"248","line":78,"column":11,"nodeType":"200","messageId":"249","endLine":78,"endColumn":16},{"ruleId":"247","severity":1,"message":"250","line":78,"column":20,"nodeType":"200","messageId":"249","endLine":78,"endColumn":24},{"ruleId":"207","severity":1,"message":"208","line":201,"column":31,"nodeType":"209","messageId":"210","endLine":201,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":206,"column":31,"nodeType":"209","messageId":"210","endLine":206,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":207,"column":31,"nodeType":"209","messageId":"210","endLine":207,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":208,"column":31,"nodeType":"209","messageId":"210","endLine":208,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":209,"column":31,"nodeType":"209","messageId":"210","endLine":209,"endColumn":33},{"ruleId":"198","severity":1,"message":"244","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":20},{"ruleId":"198","severity":1,"message":"245","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":15},{"ruleId":"198","severity":1,"message":"251","line":22,"column":16,"nodeType":"200","messageId":"201","endLine":22,"endColumn":20},{"ruleId":"207","severity":1,"message":"252","line":11,"column":18,"nodeType":"209","messageId":"210","endLine":11,"endColumn":20},{"ruleId":"253","severity":1,"message":"254","line":29,"column":5,"nodeType":"200","endLine":29,"endColumn":14,"suggestions":"255"},{"ruleId":"253","severity":1,"message":"256","line":29,"column":15,"nodeType":"257","endLine":48,"endColumn":6},{"ruleId":"207","severity":1,"message":"252","line":30,"column":21,"nodeType":"209","messageId":"210","endLine":30,"endColumn":23},{"ruleId":"207","severity":1,"message":"252","line":36,"column":42,"nodeType":"209","messageId":"210","endLine":36,"endColumn":44},{"ruleId":"238","severity":1,"message":"239","line":51,"column":35,"nodeType":"240","endLine":51,"endColumn":92},{"ruleId":"207","severity":1,"message":"208","line":56,"column":18,"nodeType":"209","messageId":"210","endLine":56,"endColumn":20},{"ruleId":"198","severity":1,"message":"258","line":22,"column":7,"nodeType":"200","messageId":"201","endLine":22,"endColumn":19},{"ruleId":"198","severity":1,"message":"259","line":31,"column":10,"nodeType":"200","messageId":"201","endLine":31,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":79,"column":9,"nodeType":"262","endLine":82,"endColumn":7},{"ruleId":"207","severity":1,"message":"252","line":134,"column":35,"nodeType":"209","messageId":"210","endLine":134,"endColumn":37},{"ruleId":"263","severity":1,"message":"264","line":175,"column":104,"nodeType":"257","messageId":"265","endLine":175,"endColumn":106},{"ruleId":"207","severity":1,"message":"208","line":179,"column":25,"nodeType":"209","messageId":"210","endLine":179,"endColumn":27},{"ruleId":"207","severity":1,"message":"252","line":184,"column":64,"nodeType":"209","messageId":"210","endLine":184,"endColumn":66},{"ruleId":"207","severity":1,"message":"252","line":184,"column":103,"nodeType":"209","messageId":"210","endLine":184,"endColumn":105},{"ruleId":"263","severity":1,"message":"264","line":199,"column":88,"nodeType":"257","messageId":"265","endLine":199,"endColumn":90},{"ruleId":"207","severity":1,"message":"208","line":200,"column":27,"nodeType":"209","messageId":"210","endLine":200,"endColumn":29},{"ruleId":"263","severity":1,"message":"264","line":220,"column":88,"nodeType":"257","messageId":"265","endLine":220,"endColumn":90},{"ruleId":"207","severity":1,"message":"208","line":222,"column":27,"nodeType":"209","messageId":"210","endLine":222,"endColumn":29},{"ruleId":"263","severity":1,"message":"264","line":240,"column":91,"nodeType":"257","messageId":"265","endLine":240,"endColumn":93},{"ruleId":"207","severity":1,"message":"208","line":244,"column":25,"nodeType":"209","messageId":"210","endLine":244,"endColumn":27},{"ruleId":"207","severity":1,"message":"252","line":250,"column":20,"nodeType":"209","messageId":"210","endLine":250,"endColumn":22},{"ruleId":"207","severity":1,"message":"252","line":250,"column":58,"nodeType":"209","messageId":"210","endLine":250,"endColumn":60},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"no-unused-vars","'FirstPage' is defined but never used.","Identifier","unusedVar",["266"],["267"],"'france' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NAME' is assigned a value but never used.","'POP_EST' is assigned a value but never used.","'populationEurope' is defined but never used.","'metropolitanEconomies' is defined but never used.","'europeanLandscape' is defined but never used.","'europeanCartogram' is defined but never used.","'Container' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Europe' is defined but never used.","'Europe2' is defined but never used.","'USPage' is defined but never used.","'Languages' is defined but never used.","'europeRegions' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'content2' is assigned a value but never used.","'setContent2' is assigned a value but never used.","'UK' is defined but never used.","'Users' is defined but never used.","'worldEconomy2019' is defined but never used.","'logo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component US_MapChart must be in PascalCase or SCREAMING_SNAKE_CASE","'ZoomableGroup' is defined but never used.","'ReactTooltip' is defined but never used.","'Tooltip' is defined but never used.","'tooltip' is assigned a value but never used.","no-redeclare","'pattS' is already defined.","redeclared","'patt' is already defined.","'data' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [content] as a second argument to the useEffect Hook.",["268"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'spanSpeaking' is assigned a value but never used.","'generateCircle' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},"Add dependencies array: [content]",{"range":"271","text":"272"},[1524,1524],", [content]"]